/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.DB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Bawantha
 */
public class BillReport extends javax.swing.JDialog {

    /**
     * Creates new form BillReport
     */
    public BillReport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getBillData();
        generateBill();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        reportView = new javax.swing.JScrollPane();
        txtInvoice = new javax.swing.JTextArea();
        footer = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblPrint = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        reportView.setBorder(null);
        reportView.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        reportView.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtInvoice.setEditable(false);
        txtInvoice.setColumns(20);
        txtInvoice.setFont(new java.awt.Font("Monospaced", 0, 20)); // NOI18N
        txtInvoice.setRows(5);
        txtInvoice.setBorder(null);
        reportView.setViewportView(txtInvoice);

        jPanel1.add(reportView, java.awt.BorderLayout.CENTER);

        jPanel5.setPreferredSize(new java.awt.Dimension(64, 64));
        jPanel5.setLayout(new java.awt.BorderLayout());

        lblPrint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrint.setIcon(new javax.swing.ImageIcon("E:\\Downloads\\icons8-print-file-64.png")); // NOI18N
        lblPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPrintMouseClicked(evt);
            }
        });
        jPanel5.add(lblPrint, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                .addGap(0, 829, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(footer, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(909, 906));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPrintMouseClicked
        lblPrint.setVisible(false);
    }//GEN-LAST:event_lblPrintMouseClicked

    private String invoiceNo;
    private String bookingNo;
    private String bookingDate;
    private String cusName;
    private int cusContact;
    private String vehicleNo;
    private int year;
    private String make;
    private String model;
    private int costPerMonth;
    private int nom;
    private String billNo;
    private double billAmount;
    private double advPayment;
    private double duePayement;
    
    public void getBookingData(){
         try{
                Connection con = DB.createConnection();
                String sql = "SELECT * FROM booking where Bk_No = '"+bookingNo+"'  ";
                PreparedStatement statement = con.prepareStatement(sql);  
                ResultSet rs = statement.executeQuery();
                while (rs.next()){
                    vehicleNo = rs.getString(2);
                    bookingDate = rs.getString(3);
                    nom = Integer.parseInt(rs.getString(4));
                    cusName = rs.getString(5);
                    cusContact = Integer.parseInt(rs.getString(7));
                }
            } 
        catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }
        getVehicleData();
    }
    public void getBillData(){
          try{
                Connection con = DB.createConnection();
                String sql = "SELECT * FROM billing ORDER BY Bill_No DESC LIMIT 1;";
                PreparedStatement statement = con.prepareStatement(sql);  
                ResultSet rs = statement.executeQuery();
                while (rs.next()){
                    billNo = rs.getString(1);
                    bookingNo = rs.getString(2);
                    billAmount = Double.parseDouble(rs.getString(4));
                    advPayment = Double.parseDouble(rs.getString(5));
                    duePayement = Double.parseDouble(rs.getString(6));
                }
            } 
        catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }  
          getBookingData();
    }
    public void getVehicleData(){
          try{
                Connection con = DB.createConnection();
                String sql = "SELECT * FROM vehicles where LPlate = '"+vehicleNo+"';";
                PreparedStatement statement = con.prepareStatement(sql);  
                ResultSet rs = statement.executeQuery();
                while (rs.next()){
                    year = Integer.parseInt(rs.getString(2));
                    make = rs.getString(3);
                    model = rs.getString(4);
                    costPerMonth = Integer.parseInt(rs.getString(6));
                }
            } 
        catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }           
    }
    
    public void generateBill(){
        txtInvoice.setText("******************************************************************************* \n\n");
        txtInvoice.setText(txtInvoice.getText()+"\t\t\t     RENT A VEHICLE\n\n");
        txtInvoice.setText(txtInvoice.getText()+"\t\t\t  No 5D, Perera Mawatha\n");
        txtInvoice.setText(txtInvoice.getText()+"\t\t\t\tColombo 7\n");
        txtInvoice.setText(txtInvoice.getText()+"\t\t\t     011-25698155\n");
        txtInvoice.setText(txtInvoice.getText()+"\t\t\t  rentavehicle@gmail.com\n\n");
        txtInvoice.setText(txtInvoice.getText()+"******************************************************************************* \n\n");
        txtInvoice.setText(txtInvoice.getText()+"Invoice NO: "+billNo+"\t\tBooking No: "+bookingNo+"\t\tBooking Date: "+bookingDate+"\n\n");
        txtInvoice.setText(txtInvoice.getText()+"Customer Name: "+cusName+"\t\tContact: "+cusContact+"\n\n");
        txtInvoice.setText(txtInvoice.getText()+"Licence Plate: "+vehicleNo+"\t   Make: "+make+"\t    Model: "+model+"\n\n");
        txtInvoice.setText(txtInvoice.getText()+"******************************************************************************* \n\n");
        txtInvoice.setText(txtInvoice.getText()+"Cost Per Month : Rs."+costPerMonth+"\n");
        txtInvoice.setText(txtInvoice.getText()+"No of Months   : "+nom+" \n");
        txtInvoice.setText(txtInvoice.getText()+"Bill Amount    : Rs."+billAmount+"\n");
        txtInvoice.setText(txtInvoice.getText()+"Advance Pay    : Rs."+advPayment+"\n");
        txtInvoice.setText(txtInvoice.getText()+"Payment Due    : Rs."+duePayement+"\n\n");
        txtInvoice.setText(txtInvoice.getText()+"******************************************************************************* \n\n");
        txtInvoice.setText(txtInvoice.getText()+"\t\t\t\tTHANK YOU!!\n\n");
        txtInvoice.setText(txtInvoice.getText()+"******************************************************************************* \n\n");
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BillReport dialog = new BillReport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel footer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblPrint;
    private javax.swing.JScrollPane reportView;
    private javax.swing.JTextArea txtInvoice;
    // End of variables declaration//GEN-END:variables
}
